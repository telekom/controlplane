# Copyright 2025 Deutsche Telekom IT GmbH
#
# SPDX-License-Identifier: Apache-2.0

name: Run CI

on:
  workflow_dispatch:
  push:
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight UTC

permissions:
  contents: read
  pull-requests: write
  checks: write
  security-events: write
  packages: write
  actions: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs: 
  prepare:
    name: detect modules
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.detect-changes.outputs.modules }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2 # pin@v2.0.0
        with:
          fetch-depth: 0
      - name: Detect Changes
        id: detect-changes
        continue-on-error: true
        uses: ron96G/monutil@v1.3.0
        with:
          base-commit: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event_name == 'push' && github.event.before }}
          head-commit: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.event_name == 'push' && github.sha }}

  common:
    name: Common
    uses: ./.github/workflows/reusable-go-ci.yaml
    with:
      module: common
      run_check_generated_files: false
      run_build_image: false

  common-server:
    name: Common Server
    uses: ./.github/workflows/reusable-go-ci.yaml
    with:
      module: common-server
      run_check_generated_files: false
      ko_build_path: "cmd/server/server.go"
      
  common-server-helm:
    name: Common Server Helm Chart
    needs: common-server
    if: startsWith(github.ref, 'refs/tags/v')
    uses: ./.github/workflows/helm-release.yaml
    with:
      chart_path: 'common-server/helm'

  secret-manager:
    name: Secret Manager
    uses: ./.github/workflows/reusable-go-ci.yaml
    with:
      module: secret-manager
      run_check_generated_files: false
      ko_build_path: "cmd/server/server.go"

  approval:
    name: Approval
    uses: ./.github/workflows/reusable-go-ci.yaml
    with:
      module: approval
      run_check_generated_files: true
      ko_build_path: "cmd/main.go"

  file-manager:
    name: File Manager
    uses: ./.github/workflows/reusable-go-ci.yaml
    with:
      module: file-manager
      run_check_generated_files: false
      ko_build_path: "cmd/server/server.go"

  gateway:
    name: Gateway
    uses: ./.github/workflows/reusable-go-ci.yaml
    with:
      module: gateway
      run_check_generated_files: true
      ko_build_path: "cmd/main.go"

  identity:
    name: Identity
    uses: ./.github/workflows/reusable-go-ci.yaml
    with:
      module: identity
      run_check_generated_files: true
      ko_build_path: "cmd/main.go"

  organization:
    name: Organization
    uses: ./.github/workflows/reusable-go-ci.yaml
    with:
      module: organization
      run_check_generated_files: true
      ko_build_path: "cmd/main.go"

  admin:
    name: Admin
    uses: ./.github/workflows/reusable-go-ci.yaml
    with:
      module: admin
      run_check_generated_files: true
      ko_build_path: "cmd/main.go"

  application:
    name: Application
    uses: ./.github/workflows/reusable-go-ci.yaml
    with:
      module: application
      run_check_generated_files: true
      ko_build_path: "cmd/main.go"

  api:
    name: Api
    uses: ./.github/workflows/reusable-go-ci.yaml
    with:
      module: api
      run_check_generated_files: true
      ko_build_path: "cmd/main.go"

  rover:
    name: Rover
    uses: ./.github/workflows/reusable-go-ci.yaml
    with:
      module: rover
      run_check_generated_files: true
      ko_build_path: "cmd/main.go"

  rover-server:
    name: Rover-Server
    uses: ./.github/workflows/reusable-go-ci.yaml
    with:
      module: rover-server
      run_check_generated_files: false
      allow_tests_failure: true
      ko_build_path: "cmd/main.go"