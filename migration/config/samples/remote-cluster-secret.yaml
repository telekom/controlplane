# Copyright 2025 Deutsche Telekom IT GmbH
#
# SPDX-License-Identifier: Apache-2.0

# Sample secret for remote cluster credentials
# Replace the values with your actual credentials

apiVersion: v1
kind: Secret
metadata:
  name: remote-cluster-token
  namespace: controlplane-system
type: Opaque
stringData:
  # API server URL of the legacy cluster
  server: https://legacy-cluster.example.com:6443
  
  # Service account token from the legacy cluster
  # Generate with: kubectl create token migration-reader -n controlplane-system --duration=8760h
  token: eyJhbGciOiJSUzI1NiIsImtpZCI6IjEyMzQ1Njc4OTAifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJjb250cm9scGxhbmUtc3lzdGVtIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1pZ3JhdGlvbi1yZWFkZXItdG9rZW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWlncmF0aW9uLXJlYWRlciJ9.REPLACE_WITH_ACTUAL_TOKEN
  
  # CA certificate of the legacy cluster
  # Get with: kubectl config view --raw -o jsonpath='{.clusters[0].cluster.certificate-authority-data}' | base64 -d
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    REPLACE_WITH_ACTUAL_CA_CERTIFICATE
    -----END CERTIFICATE-----

# Alternative: Use full kubeconfig
# If you have a complete kubeconfig file, you can use it instead:
#
# stringData:
#   kubeconfig: |
#     apiVersion: v1
#     kind: Config
#     clusters:
#     - cluster:
#         certificate-authority-data: LS0tLS1CRUdJTi...
#         server: https://legacy-cluster.example.com:6443
#       name: legacy-cluster
#     contexts:
#     - context:
#         cluster: legacy-cluster
#         user: migration-reader
#       name: migration-reader@legacy-cluster
#     current-context: migration-reader@legacy-cluster
#     users:
#     - name: migration-reader
#       user:
#         token: eyJhbGciOiJSUzI1NiIsImtpZCI6IjEyMzQ1Njc4OTAifQ...
