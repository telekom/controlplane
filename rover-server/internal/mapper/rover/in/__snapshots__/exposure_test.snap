
[Exposure Mapper mapApiExposure must map ApiExposure correctly - 1]
&v1.ApiExposure{
    BasePath:  "/eni/distr/v1",
    Upstreams: {
        {URL:"https://httpbin.org/anything", Weight:0},
    },
    Visibility: "World",
    Approval:   v1.Approval{
        Strategy:     "Simple",
        TrustedTeams: nil,
    },
    Transformation: (*v1.Transformation)(nil),
    Traffic:        v1.Traffic{},
    Security:       (*v1.Security)(nil),
}
---

[Exposure Mapper mapApiExposure must handle empty ApiExposure input - 1]
&v1.ApiExposure{
    BasePath:  "",
    Upstreams: {
    },
    Visibility:     "",
    Approval:       v1.Approval{},
    Transformation: (*v1.Transformation)(nil),
    Traffic:        v1.Traffic{},
    Security:       (*v1.Security)(nil),
}
---

[Exposure Mapper mapExposure must map an ApiExposure correctly - 1]
&v1.Exposure{
    Api: &v1.ApiExposure{
        BasePath:  "/eni/distr/v1",
        Upstreams: {
            {URL:"https://httpbin.org/anything", Weight:0},
        },
        Visibility: "World",
        Approval:   v1.Approval{
            Strategy:     "Simple",
            TrustedTeams: nil,
        },
        Transformation: (*v1.Transformation)(nil),
        Traffic:        v1.Traffic{},
        Security:       (*v1.Security)(nil),
    },
    Event: (*v1.EventExposure)(nil),
}
---

[Exposure Mapper mapExposure must map an EventExposure correctly - 1]
&v1.Exposure{
    Api:   (*v1.ApiExposure)(nil),
    Event: &v1.EventExposure{EventType:"tardis.horizon.demo.cetus.v1"},
}
---

[Exposure Mapper mapExposure must return an error for unknown exposure type - 1]
&v1.Exposure{}
---
