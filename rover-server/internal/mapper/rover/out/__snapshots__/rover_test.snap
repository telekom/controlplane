
[Rover Mapper MapRover must map the internal format to the api format - 1]
&api.Rover{
    Authentication: api.Authentication{},
    Exposures:      {
        {
            union: {0x7b, 0x22, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x22, 0x3a, 0x22, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x22, 0x2c, 0x22, 0x62, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x3a, 0x22, 0x2f, 0x65, 0x6e, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x2f, 0x76, 0x31, 0x22, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x22, 0x61, 0x70, 0x69, 0x22, 0x2c, 0x22, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x3a, 0x22, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x62, 0x69, 0x6e, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x61, 0x6e, 0x79, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x3a, 0x22, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x22, 0x7d},
        },
    },
    Icto:           "",
    Id:             "",
    IpRestrictions: api.IpRestrictions{},
    Status:         api.Status{},
    Subscriptions:  {
        {
            union: {0x7b, 0x22, 0x62, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x3a, 0x22, 0x2f, 0x65, 0x6e, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x2f, 0x76, 0x31, 0x22, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x22, 0x61, 0x70, 0x69, 0x22, 0x7d},
        },
    },
    Zone: "dataplane1",
}
---

[Rover Mapper MapExposures must map exposures correctly - 1]
&api.Rover{
    Authentication: api.Authentication{},
    Exposures:      {
        {
            union: {0x7b, 0x22, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x22, 0x3a, 0x22, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x22, 0x2c, 0x22, 0x62, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x3a, 0x22, 0x2f, 0x65, 0x6e, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x2f, 0x76, 0x31, 0x22, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x22, 0x61, 0x70, 0x69, 0x22, 0x2c, 0x22, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x3a, 0x22, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x62, 0x69, 0x6e, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x61, 0x6e, 0x79, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x3a, 0x22, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x22, 0x7d},
        },
    },
    Icto:           "",
    Id:             "",
    IpRestrictions: api.IpRestrictions{},
    Status:         api.Status{},
    Subscriptions:  nil,
    Zone:           "",
}
---

[Rover Mapper MapSubscriptions must map subscriptions correctly - 1]
&api.Rover{
    Authentication: api.Authentication{},
    Exposures:      nil,
    Icto:           "",
    Id:             "",
    IpRestrictions: api.IpRestrictions{},
    Status:         api.Status{},
    Subscriptions:  {
        {
            union: {0x7b, 0x22, 0x62, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x3a, 0x22, 0x2f, 0x65, 0x6e, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x2f, 0x76, 0x31, 0x22, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x22, 0x61, 0x70, 0x69, 0x22, 0x7d},
        },
    },
    Zone: "",
}
---

[Rover Mapper MapRoverResponse must map a Rover to a RoverResponse correctly - 1]
{
 "exposures": [
  {
   "approval": "SIMPLE",
   "basePath": "/eni/distr/v1",
   "type": "api",
   "upstream": "https://httpbin.org/anything",
   "visibility": "WORLD"
  }
 ],
 "id": "eni--hyperion--rover-local-sub",
 "name": "rover-local-sub",
 "status": {
  "processingState": "done",
  "state": "complete",
  "time": "<Any value>"
 },
 "subscriptions": [
  {
   "basePath": "/eni/distr/v1",
   "type": "api"
  }
 ],
 "zone": "dataplane1"
}
---

[Rover Mapper MapRoverResponse must return an error if the input rover is nil - 1]
api.RoverResponse{}
---
