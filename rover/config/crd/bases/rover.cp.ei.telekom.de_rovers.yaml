# SPDX-FileCopyrightText: 2025 Deutsche Telekom IT GmbH
#
# SPDX-License-Identifier: Apache-2.0
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: rovers.rover.cp.ei.telekom.de
spec:
  group: rover.cp.ei.telekom.de
  names:
    kind: Rover
    listKind: RoverList
    plural: rovers
    singular: rover
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Zone the Rover belongs to
      jsonPath: .spec.zone
      name: Zone
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          Rover is the Schema for the rovers API
          Rover resources define API exposures and subscriptions for applications
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of the Rover resource
            properties:
              clientSecret:
                description: ClientSecret is the secret used for client authentication
                minLength: 1
                type: string
              exposures:
                description: Exposures is a list of APIs and Events that this Rover
                  exposes to consumers
                items:
                  description: Exposure defines a service that is exposed by this
                    Rover
                  properties:
                    api:
                      description: Api defines an API-based service exposure configuration
                      properties:
                        approval:
                          description: Approval defines the approval workflow required
                            for this API exposure
                          properties:
                            strategy:
                              default: Simple
                              description: Strategy defines the approval process required
                                for this API
                              enum:
                              - Auto
                              - Simple
                              - FourEyes
                              type: string
                            trustedTeams:
                              description: |-
                                TrustedTeams identifies teams that are trusted for approving this API
                                Per default your own team is trusted
                              items:
                                description: TrustedTeam identifies a team that is
                                  trusted for approvals
                                properties:
                                  group:
                                    description: Group identifies the organizational
                                      group for this trusted team
                                    minLength: 1
                                    type: string
                                  team:
                                    description: Team identifies the specific team
                                      within the group
                                    minLength: 1
                                    type: string
                                required:
                                - group
                                - team
                                type: object
                              maxItems: 10
                              minItems: 0
                              type: array
                          required:
                          - strategy
                          type: object
                        basePath:
                          description: BasePath is the base path of the API (must
                            start with /)
                          pattern: ^/.*$
                          type: string
                        security:
                          description: Security defines optional security configuration
                            for this API
                          properties:
                            m2m:
                              description: M2M defines machine-to-machine authentication
                                configuration
                              properties:
                                basic:
                                  description: Basic defines basic authentication
                                    configuration
                                  properties:
                                    password:
                                      description: Password for basic authentication
                                      minLength: 1
                                      type: string
                                    username:
                                      description: Username for basic authentication
                                      minLength: 1
                                      type: string
                                  required:
                                  - password
                                  - username
                                  type: object
                                externalIDP:
                                  description: ExternalIDP defines external identity
                                    provider configuration
                                  properties:
                                    basic:
                                      description: Basic defines basic auth credentials
                                        for the OAuth2 token request
                                      properties:
                                        password:
                                          description: Password for basic authentication
                                          minLength: 1
                                          type: string
                                        username:
                                          description: Username for basic authentication
                                          minLength: 1
                                          type: string
                                      required:
                                      - password
                                      - username
                                      type: object
                                    client:
                                      description: Client defines client credentials
                                        for the OAuth2 token request
                                      properties:
                                        clientId:
                                          description: ClientId identifies the client
                                            for OAuth2 client credentials flow
                                          type: string
                                        clientKey:
                                          description: ClientKey is the private key
                                            associated with the client ID
                                          type: string
                                        clientSecret:
                                          description: ClientSecret is the secret
                                            associated with the client ID
                                          type: string
                                      type: object
                                      x-kubernetes-validations:
                                      - message: ClientSecret and ClientKey cannot
                                          be used together
                                        rule: 'self == null || (has(self.clientKey)
                                          ? (!has(self.clientSecret)) : true)'
                                      - message: At least one of clientSecret or clientKey
                                          must be provided
                                        rule: self == null || has(self.clientSecret)
                                          || has(self.clientKey)
                                    grantType:
                                      description: GrantType defines the OAuth2 grant
                                        type to use for the token request
                                      enum:
                                      - client_credentials
                                      - authorization_code
                                      - password
                                      type: string
                                    tokenEndpoint:
                                      description: TokenEndpoint is the URL for the
                                        OAuth2 token endpoint
                                      format: uri
                                      type: string
                                    tokenRequest:
                                      description: TokenRequest is the type of token
                                        request, "body" or "header"
                                      enum:
                                      - body
                                      - header
                                      type: string
                                  required:
                                  - tokenEndpoint
                                  type: object
                                  x-kubernetes-validations:
                                  - message: Only one of basic or client credentials
                                      can be provided (XOR relationship)
                                    rule: self == null || (!has(self.basic) && has(self.client))
                                      || (has(self.basic) &&  !has(self.client))
                                scopes:
                                  description: Scopes defines additional OAuth2 scopes
                                    that are added to the LMS token
                                  items:
                                    type: string
                                  maxItems: 10
                                  type: array
                              type: object
                              x-kubernetes-validations:
                              - message: ExternalIDP and basic authentication cannot
                                  be used together
                                rule: 'self == null || (has(self.externalIDP) ? (!has(self.basic))
                                  : true)'
                              - message: Scopes and basic authentication cannot be
                                  used together
                                rule: 'self == null || (has(self.scopes) ? (!has(self.basic))
                                  : true)'
                              - message: At least one of externalIDP, basic, or scopes
                                  must be provided
                                rule: self == null || has(self.externalIDP) || has(self.basic)
                                  || has(self.scopes)
                          type: object
                        traffic:
                          description: Traffic defines optional traffic management
                            configuration for this API
                          properties:
                            failover:
                              description: Failover defines disaster recovery configuration
                                for this API
                              properties:
                                zones:
                                  description: Zones is a list of zone names to use
                                    for failover if the primary zone is unavailable
                                  items:
                                    type: string
                                  maxItems: 10
                                  type: array
                              type: object
                            loadBalancing:
                              description: LoadBalancing defines how traffic is distributed
                                among multiple upstream servers
                              properties:
                                strategy:
                                  default: RoundRobin
                                  description: Strategy defines the algorithm used
                                    for distributing traffic (RoundRobin, LeastConnections)
                                  enum:
                                  - RoundRobin
                                  - LeastConnections
                                  type: string
                              type: object
                            rateLimit:
                              description: RateLimit defines request rate limiting
                                for this API
                              properties:
                                consumers:
                                  description: Consumers defines rate limits applied
                                    to API consumers (clients)
                                  properties:
                                    default:
                                      description: Default defines the rate limit
                                        applied to all consumers not specifically
                                        overridden
                                      properties:
                                        hour:
                                          description: Hour defines the maximum number
                                            of requests allowed per hour
                                          minimum: 0
                                          type: integer
                                        minute:
                                          description: Minute defines the maximum
                                            number of requests allowed per minute
                                          minimum: 0
                                          type: integer
                                        second:
                                          description: Second defines the maximum
                                            number of requests allowed per second
                                          minimum: 0
                                          type: integer
                                      type: object
                                    overrides:
                                      additionalProperties:
                                        description: RateLimitConfig defines rate
                                          limits for different time windows
                                        properties:
                                          hour:
                                            description: Hour defines the maximum
                                              number of requests allowed per hour
                                            minimum: 0
                                            type: integer
                                          minute:
                                            description: Minute defines the maximum
                                              number of requests allowed per minute
                                            minimum: 0
                                            type: integer
                                          second:
                                            description: Second defines the maximum
                                              number of requests allowed per second
                                            minimum: 0
                                            type: integer
                                        type: object
                                      description: Overrides defines consumer-specific
                                        rate limits, keyed by consumer identifier
                                      type: object
                                  type: object
                                provider:
                                  description: Provider defines rate limits applied
                                    by the API provider (owner)
                                  properties:
                                    hour:
                                      description: Hour defines the maximum number
                                        of requests allowed per hour
                                      minimum: 0
                                      type: integer
                                    minute:
                                      description: Minute defines the maximum number
                                        of requests allowed per minute
                                      minimum: 0
                                      type: integer
                                    second:
                                      description: Second defines the maximum number
                                        of requests allowed per second
                                      minimum: 0
                                      type: integer
                                  type: object
                              type: object
                          type: object
                        transformation:
                          description: Transformation defines optional request/response
                            transformations for this API
                          properties:
                            request:
                              description: Request defines transformations applied
                                to incoming API requests
                              properties:
                                headers:
                                  description: Headers defines HTTP header modifications
                                    for requests
                                  properties:
                                    add:
                                      description: Add is a list of HTTP headers to
                                        add to the request/response
                                      items:
                                        type: string
                                      maxItems: 5
                                      minItems: 1
                                      type: array
                                    remove:
                                      description: Remove is a list of HTTP header
                                        names to remove
                                      items:
                                        type: string
                                      maxItems: 5
                                      minItems: 1
                                      type: array
                                  type: object
                              type: object
                          type: object
                        upstreams:
                          description: Upstreams defines the backend service endpoints
                            for this API
                          items:
                            description: Upstream defines a backend service endpoint
                              for an API
                            properties:
                              url:
                                description: URL is the endpoint URL for the backend
                                  service
                                format: uri
                                type: string
                              weight:
                                default: 1
                                description: Weight defines the load balancing weight
                                  for this upstream (when multiple upstreams)
                                maximum: 100
                                minimum: 1
                                type: integer
                            required:
                            - url
                            type: object
                          maxItems: 12
                          minItems: 1
                          type: array
                        visibility:
                          default: Enterprise
                          description: Visibility defines the access scope for this
                            API
                          enum:
                          - World
                          - Zone
                          - Enterprise
                          type: string
                      required:
                      - approval
                      - basePath
                      - upstreams
                      - visibility
                      type: object
                    event:
                      description: Event defines an Event-based service exposure configuration
                      properties:
                        eventType:
                          description: EventType identifies the type of event that
                            is published
                          minLength: 1
                          type: string
                      required:
                      - eventType
                      type: object
                  type: object
                  x-kubernetes-validations:
                  - message: At least one of api or event must be specified
                    rule: self == null || has(self.api) || has(self.event)
                  - message: Only one of api or event can be specified (XOR relationship)
                    rule: self == null || (!has(self.api) && has(self.event)) || (has(self.api)
                      && !has(self.event))
                type: array
              ipRestrictions:
                description: IpRestrictions defines IP-based access restrictions for
                  the entire Application
                properties:
                  allow:
                    description: Allow is a list of IP addresses or CIDR ranges that
                      are allowed access
                    items:
                      type: string
                    maxItems: 10
                    minItems: 0
                    type: array
                    x-kubernetes-validations:
                    - message: All items must be valid IP addresses or CIDR notations
                      rule: self.all(x, isCIDR(x) || isIP(x))
                  deny:
                    description: Deny is a list of IP addresses or CIDR ranges that
                      are denied access
                    items:
                      type: string
                    maxItems: 10
                    minItems: 0
                    type: array
                    x-kubernetes-validations:
                    - message: All items must be valid IP addresses or CIDR notations
                      rule: self.all(x, isCIDR(x) || isIP(x))
                type: object
              subscriptions:
                description: Subscriptions is a list of APIs and Events that this
                  Rover consumes from providers
                items:
                  description: Subscription defines a service that this Rover consumes
                  properties:
                    api:
                      description: Api defines an API-based service subscription configuration
                      properties:
                        basePath:
                          description: BasePath is the base path of the API to consume
                            (must start with /)
                          pattern: ^/.*$
                          type: string
                        organization:
                          description: |-
                            Organization is the organization that owns the API
                            Defaults to local organization if not specified
                          type: string
                        security:
                          description: Security defines optional security configuration
                            for this API
                          properties:
                            m2m:
                              description: M2M defines machine-to-machine authentication
                                configuration
                              properties:
                                basic:
                                  description: Basic defines basic authentication
                                    configuration
                                  properties:
                                    password:
                                      description: Password for basic authentication
                                      minLength: 1
                                      type: string
                                    username:
                                      description: Username for basic authentication
                                      minLength: 1
                                      type: string
                                  required:
                                  - password
                                  - username
                                  type: object
                                client:
                                  description: Client defines client credentials for
                                    OAuth2
                                  properties:
                                    clientId:
                                      description: ClientId identifies the client
                                        for OAuth2 client credentials flow
                                      type: string
                                    clientKey:
                                      description: ClientKey is the private key associated
                                        with the client ID
                                      type: string
                                    clientSecret:
                                      description: ClientSecret is the secret associated
                                        with the client ID
                                      type: string
                                  type: object
                                  x-kubernetes-validations:
                                  - message: ClientSecret and ClientKey cannot be
                                      used together
                                    rule: 'self == null || (has(self.clientKey) ?
                                      (!has(self.clientSecret)) : true)'
                                  - message: At least one of clientSecret or clientKey
                                      must be provided
                                    rule: self == null || has(self.clientSecret) ||
                                      has(self.clientKey)
                                scopes:
                                  description: Scopes defines additional OAuth2 scopes
                                    that are added to the LMS token
                                  items:
                                    type: string
                                  maxItems: 10
                                  type: array
                              type: object
                              x-kubernetes-validations:
                              - message: Client and basic authentication cannot be
                                  used together
                                rule: 'self == null || (has(self.client) ? (!has(self.basic))
                                  : true)'
                              - message: Scopes and basic authentication cannot be
                                  used together
                                rule: 'self == null || (has(self.scopes) ? (!has(self.basic))
                                  : true)'
                              - message: At least one of client, basic, or scopes
                                  must be provided
                                rule: self == null || has(self.client) || has(self.basic)
                                  || has(self.scopes)
                          type: object
                        traffic:
                          description: Traffic defines optional traffic management
                            configuration for this API
                          properties:
                            failover:
                              description: Failover defines disaster recovery configuration
                                for this API
                              properties:
                                zones:
                                  description: Zones is a list of zone names to use
                                    for failover if the primary zone is unavailable
                                  items:
                                    type: string
                                  maxItems: 10
                                  type: array
                              type: object
                            rateLimit:
                              description: RateLimit defines request rate limiting
                                for this API
                              properties:
                                hour:
                                  description: Hour defines the maximum number of
                                    requests allowed per hour
                                  minimum: 0
                                  type: integer
                                minute:
                                  description: Minute defines the maximum number of
                                    requests allowed per minute
                                  minimum: 0
                                  type: integer
                                second:
                                  description: Second defines the maximum number of
                                    requests allowed per second
                                  minimum: 0
                                  type: integer
                              type: object
                          type: object
                        transformation:
                          description: Transformation defines optional request/response
                            transformations for this API
                          properties:
                            request:
                              description: Request defines transformations applied
                                to incoming API requests
                              properties:
                                headers:
                                  description: Headers defines HTTP header modifications
                                    for requests
                                  properties:
                                    add:
                                      description: Add is a list of HTTP headers to
                                        add to the request/response
                                      items:
                                        type: string
                                      maxItems: 5
                                      minItems: 1
                                      type: array
                                    remove:
                                      description: Remove is a list of HTTP header
                                        names to remove
                                      items:
                                        type: string
                                      maxItems: 5
                                      minItems: 1
                                      type: array
                                  type: object
                              type: object
                          type: object
                      required:
                      - basePath
                      type: object
                    event:
                      description: Event defines an Event-based service subscription
                        configuration
                      properties:
                        eventType:
                          description: EventType identifies the type of event to subscribe
                            to
                          minLength: 1
                          type: string
                      required:
                      - eventType
                      type: object
                  type: object
                  x-kubernetes-validations:
                  - message: At least one of api or event must be specified
                    rule: self == null || has(self.api) || has(self.event)
                  - message: Only one of api or event can be specified (XOR relationship)
                    rule: (has(self.api) && !has(self.event)) || (!has(self.api) &&
                      has(self.event))
                type: array
              zone:
                description: Zone identifies the deployment zone for this Rover resource
                minLength: 1
                type: string
            required:
            - clientSecret
            - zone
            type: object
          status:
            description: Status contains the observed state of the Rover resource
            properties:
              apiExposures:
                description: ApiExposures are references to ApiExposure resources
                  created by this Rover
                items:
                  description: |-
                    ObjectRef is a reference to a Kubernetes object
                    It is similar to types.NamespacedName but has the required json tags for serialization
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                    uid:
                      description: |-
                        UID is a type that holds unique ID values, including UUIDs.  Because we
                        don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                        intent and helps make sure that UIDs and names do not get conflated.
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
                type: array
              apiSubscriptions:
                description: ApiSubscriptions are references to ApiSubscription resources
                  created by this Rover
                items:
                  description: |-
                    ObjectRef is a reference to a Kubernetes object
                    It is similar to types.NamespacedName but has the required json tags for serialization
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                    uid:
                      description: |-
                        UID is a type that holds unique ID values, including UUIDs.  Because we
                        don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                        intent and helps make sure that UIDs and names do not get conflated.
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
                type: array
              application:
                description: Application is a reference to the Application resource
                  associated with this Rover
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                  uid:
                    description: |-
                      UID is a type that holds unique ID values, including UUIDs.  Because we
                      don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                      intent and helps make sure that UIDs and names do not get conflated.
                    type: string
                required:
                - name
                - namespace
                type: object
              conditions:
                description: Conditions represent the latest available observations
                  of the Rover's state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
